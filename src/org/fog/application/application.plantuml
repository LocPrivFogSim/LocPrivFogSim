@startuml

title __APPLICATION's Class Diagram__\n

  namespace  {
    namespace rg.fog.application {
      class org.fog.application.AppEdge {
          {static} + ACTUATOR : int
          {static} + MODULE : int
          {static} + SENSOR : int
          - destination : String
          - direction : int
          - edgeType : int
          - isPeriodic : boolean
          - periodicity : double
          - source : String
          - tupleCpuLength : double
          - tupleNwLength : double
          - tupleType : String
          + AppEdge()
          + AppEdge()
          + AppEdge()
          + getDestination()
          + getDirection()
          + getEdgeType()
          + getPeriodicity()
          + getSource()
          + getTupleCpuLength()
          + getTupleNwLength()
          + getTupleType()
          + isPeriodic()
          + setDestination()
          + setDirection()
          + setEdgeType()
          + setPeriodic()
          + setPeriodicity()
          + setSource()
          + setTupleCpuLength()
          + setTupleNwLength()
          + setTupleType()
          + toString()
      }
    }
  }
  

  namespace  {
    namespace rg.fog.application {
      class org.fog.application.AppLoop {
          - loopId : int
          - modules : List<String>
          + AppLoop()
          + getEndModule()
          + getLoopId()
          + getModules()
          + getNextModuleInLoop()
          + getStartModule()
          + hasEdge()
          + isEndModule()
          + isStartModule()
          + setLoopId()
          + setModules()
      }
    }
  }
  

  namespace  {
    namespace rg.fog.application {
      class org.fog.application.AppModule {
          - actuatorSubscriptions : Map<String, List<Integer>>
          - appId : String
          - name : String
          - selectivityMap : Map<Pair<String, String>, SelectivityModel>
          + AppModule()
          + AppModule()
          + getActuatorSubscriptions()
          + getAppId()
          + getName()
          + getSelectivityMap()
          + setActuatorSubscriptions()
          + setAppId()
          + setName()
          + setSelectivityMap()
          + subscribeActuator()
          + toString()
      }
    }
  }
  

  namespace  {
    namespace rg.fog.application {
      class org.fog.application.Application {
          - appId : String
          - edgeMap : Map<String, AppEdge>
          - edges : List<AppEdge>
          - loops : List<AppLoop>
          - modules : List<AppModule>
          - placementStrategy : String
          - userId : int
          + Application()
          + Application()
          + addAppEdge()
          + addAppEdge()
          + addAppModule()
          + addAppModule()
          + addAppModule()
          + addTupleMapping()
          {static} + createApplication()
          + createTuple()
          + getAppId()
          + getEdgeMap()
          + getEdges()
          + getGeoCoverage()
          + getLoops()
          + getModuleByName()
          + getModules()
          + getPeriodicEdges()
          + getPlacementStrategy()
          + getResultantTuples()
          + getUserId()
          + setAppId()
          + setEdgeMap()
          + setEdges()
          + setGeoCoverage()
          + setLoops()
          + setModules()
          + setPlacementStrategy()
          + setUserId()
          + toString()
      }
    }
  }
  

  org.fog.application.AppModule -up-|> org.cloudbus.cloudsim.power.PowerVm
  org.fog.application.Application o-- org.fog.utils.GeoCoverage : geoCoverage


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
