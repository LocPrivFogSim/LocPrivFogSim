@startuml

title __PROVISIONERS's Class Diagram__\n

  namespace  {
    namespace rg.cloudbus.cloudsim {
      namespace provisioners {
        abstract class org.cloudbus.cloudsim.provisioners.BwProvisioner {
            - availableBw : long
            - bw : long
            + BwProvisioner()
            {abstract} + allocateBwForVm()
            + deallocateBwForAllVms()
            {abstract} + deallocateBwForVm()
            {abstract} + getAllocatedBwForVm()
            + getAvailableBw()
            + getBw()
            + getUsedBw()
            {abstract} + isSuitableForVm()
            # setAvailableBw()
            # setBw()
        }
      }
    }
  }
  

  namespace  {
    namespace rg.cloudbus.cloudsim {
      namespace provisioners {
        class org.cloudbus.cloudsim.provisioners.BwProvisionerSimple {
            - bwTable : Map<String, Long>
            + BwProvisionerSimple()
            + allocateBwForVm()
            + deallocateBwForAllVms()
            + deallocateBwForVm()
            + getAllocatedBwForVm()
            + isSuitableForVm()
            # getBwTable()
            # setBwTable()
        }
      }
    }
  }
  

  namespace  {
    namespace rg.cloudbus.cloudsim {
      namespace provisioners {
        abstract class org.cloudbus.cloudsim.provisioners.PeProvisioner {
            - availableMips : double
            - mips : double
            + PeProvisioner()
            {abstract} + allocateMipsForVm()
            {abstract} + allocateMipsForVm()
            {abstract} + allocateMipsForVm()
            + deallocateMipsForAllVms()
            {abstract} + deallocateMipsForVm()
            {abstract} + getAllocatedMipsForVm()
            {abstract} + getAllocatedMipsForVmByVirtualPeId()
            + getAvailableMips()
            + getMips()
            + getTotalAllocatedMips()
            {abstract} + getTotalAllocatedMipsForVm()
            + getUtilization()
            + setMips()
            # setAvailableMips()
        }
      }
    }
  }
  

  namespace  {
    namespace rg.cloudbus.cloudsim {
      namespace provisioners {
        class org.cloudbus.cloudsim.provisioners.PeProvisionerSimple {
            - peTable : Map<String, List<Double>>
            + PeProvisionerSimple()
            + allocateMipsForVm()
            + allocateMipsForVm()
            + allocateMipsForVm()
            + deallocateMipsForAllVms()
            + deallocateMipsForVm()
            + getAllocatedMipsForVm()
            + getAllocatedMipsForVmByVirtualPeId()
            + getTotalAllocatedMipsForVm()
            # getPeTable()
            # setPeTable()
        }
      }
    }
  }
  

  namespace  {
    namespace rg.cloudbus.cloudsim {
      namespace provisioners {
        abstract class org.cloudbus.cloudsim.provisioners.RamProvisioner {
            - availableRam : int
            - ram : int
            + RamProvisioner()
            {abstract} + allocateRamForVm()
            + deallocateRamForAllVms()
            {abstract} + deallocateRamForVm()
            {abstract} + getAllocatedRamForVm()
            + getAvailableRam()
            + getRam()
            + getUsedRam()
            {abstract} + isSuitableForVm()
            # setAvailableRam()
            # setRam()
        }
      }
    }
  }
  

  namespace  {
    namespace rg.cloudbus.cloudsim {
      namespace provisioners {
        class org.cloudbus.cloudsim.provisioners.RamProvisionerSimple {
            - ramTable : Map<String, Integer>
            + RamProvisionerSimple()
            + allocateRamForVm()
            + deallocateRamForAllVms()
            + deallocateRamForVm()
            + getAllocatedRamForVm()
            + isSuitableForVm()
            # getRamTable()
            # setRamTable()
        }
      }
    }
  }
  

  org.cloudbus.cloudsim.provisioners.BwProvisionerSimple -up-|> org.cloudbus.cloudsim.provisioners.BwProvisioner
  org.cloudbus.cloudsim.provisioners.PeProvisionerSimple -up-|> org.cloudbus.cloudsim.provisioners.PeProvisioner
  org.cloudbus.cloudsim.provisioners.RamProvisionerSimple -up-|> org.cloudbus.cloudsim.provisioners.RamProvisioner


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
